// Generated from antlr/Solidity.g4 by ANTLR 4.13.2
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class SolidityLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly T__36 = 37;
	public static readonly T__37 = 38;
	public static readonly T__38 = 39;
	public static readonly T__39 = 40;
	public static readonly T__40 = 41;
	public static readonly T__41 = 42;
	public static readonly T__42 = 43;
	public static readonly T__43 = 44;
	public static readonly T__44 = 45;
	public static readonly T__45 = 46;
	public static readonly T__46 = 47;
	public static readonly T__47 = 48;
	public static readonly T__48 = 49;
	public static readonly T__49 = 50;
	public static readonly T__50 = 51;
	public static readonly T__51 = 52;
	public static readonly T__52 = 53;
	public static readonly T__53 = 54;
	public static readonly T__54 = 55;
	public static readonly T__55 = 56;
	public static readonly T__56 = 57;
	public static readonly T__57 = 58;
	public static readonly T__58 = 59;
	public static readonly T__59 = 60;
	public static readonly T__60 = 61;
	public static readonly T__61 = 62;
	public static readonly T__62 = 63;
	public static readonly T__63 = 64;
	public static readonly T__64 = 65;
	public static readonly T__65 = 66;
	public static readonly T__66 = 67;
	public static readonly T__67 = 68;
	public static readonly T__68 = 69;
	public static readonly T__69 = 70;
	public static readonly T__70 = 71;
	public static readonly T__71 = 72;
	public static readonly T__72 = 73;
	public static readonly T__73 = 74;
	public static readonly T__74 = 75;
	public static readonly T__75 = 76;
	public static readonly T__76 = 77;
	public static readonly T__77 = 78;
	public static readonly T__78 = 79;
	public static readonly T__79 = 80;
	public static readonly T__80 = 81;
	public static readonly T__81 = 82;
	public static readonly T__82 = 83;
	public static readonly T__83 = 84;
	public static readonly T__84 = 85;
	public static readonly T__85 = 86;
	public static readonly T__86 = 87;
	public static readonly T__87 = 88;
	public static readonly T__88 = 89;
	public static readonly T__89 = 90;
	public static readonly T__90 = 91;
	public static readonly T__91 = 92;
	public static readonly T__92 = 93;
	public static readonly T__93 = 94;
	public static readonly T__94 = 95;
	public static readonly T__95 = 96;
	public static readonly Int = 97;
	public static readonly Uint = 98;
	public static readonly Byte = 99;
	public static readonly Fixed = 100;
	public static readonly Ufixed = 101;
	public static readonly BooleanLiteral = 102;
	public static readonly DecimalNumber = 103;
	public static readonly HexNumber = 104;
	public static readonly NumberUnit = 105;
	public static readonly HexLiteralFragment = 106;
	public static readonly ReservedKeyword = 107;
	public static readonly AnonymousKeyword = 108;
	public static readonly BreakKeyword = 109;
	public static readonly ConstantKeyword = 110;
	public static readonly TransientKeyword = 111;
	public static readonly ImmutableKeyword = 112;
	public static readonly ContinueKeyword = 113;
	public static readonly LeaveKeyword = 114;
	public static readonly ExternalKeyword = 115;
	public static readonly IndexedKeyword = 116;
	public static readonly InternalKeyword = 117;
	public static readonly PayableKeyword = 118;
	public static readonly PrivateKeyword = 119;
	public static readonly PublicKeyword = 120;
	public static readonly VirtualKeyword = 121;
	public static readonly PureKeyword = 122;
	public static readonly TypeKeyword = 123;
	public static readonly ViewKeyword = 124;
	public static readonly GlobalKeyword = 125;
	public static readonly ConstructorKeyword = 126;
	public static readonly FallbackKeyword = 127;
	public static readonly ReceiveKeyword = 128;
	public static readonly Identifier = 129;
	public static readonly StringLiteralFragment = 130;
	public static readonly VersionLiteral = 131;
	public static readonly WS = 132;
	public static readonly COMMENT = 133;
	public static readonly LINE_COMMENT = 134;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'pragma'", 
                                                            "';'", "'*'", 
                                                            "'||'", "'^'", 
                                                            "'~'", "'>='", 
                                                            "'>'", "'<'", 
                                                            "'<='", "'='", 
                                                            "'as'", "'import'", 
                                                            "'from'", "'{'", 
                                                            "','", "'}'", 
                                                            "'abstract'", 
                                                            "'contract'", 
                                                            "'interface'", 
                                                            "'library'", 
                                                            "'is'", "'('", 
                                                            "')'", "'error'", 
                                                            "'using'", "'for'", 
                                                            "'|'", "'&'", 
                                                            "'+'", "'-'", 
                                                            "'/'", "'%'", 
                                                            "'=='", "'!='", 
                                                            "'struct'", 
                                                            "'modifier'", 
                                                            "'function'", 
                                                            "'returns'", 
                                                            "'event'", "'enum'", 
                                                            "'['", "']'", 
                                                            "'address'", 
                                                            "'.'", "'mapping'", 
                                                            "'=>'", "'memory'", 
                                                            "'storage'", 
                                                            "'calldata'", 
                                                            "'if'", "'else'", 
                                                            "'try'", "'catch'", 
                                                            "'while'", "'unchecked'", 
                                                            "'assembly'", 
                                                            "'do'", "'return'", 
                                                            "'throw'", "'emit'", 
                                                            "'revert'", 
                                                            "'var'", "'bool'", 
                                                            "'string'", 
                                                            "'byte'", "'++'", 
                                                            "'--'", "'new'", 
                                                            "':'", "'delete'", 
                                                            "'!'", "'**'", 
                                                            "'<<'", "'>>'", 
                                                            "'&&'", "'?'", 
                                                            "'|='", "'^='", 
                                                            "'&='", "'<<='", 
                                                            "'>>='", "'+='", 
                                                            "'-='", "'*='", 
                                                            "'/='", "'%='", 
                                                            "'let'", "':='", 
                                                            "'=:'", "'switch'", 
                                                            "'case'", "'default'", 
                                                            "'->'", "'callback'", 
                                                            "'override'", 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, "'anonymous'", 
                                                            "'break'", "'constant'", 
                                                            "'transient'", 
                                                            "'immutable'", 
                                                            "'continue'", 
                                                            "'leave'", "'external'", 
                                                            "'indexed'", 
                                                            "'internal'", 
                                                            "'payable'", 
                                                            "'private'", 
                                                            "'public'", 
                                                            "'virtual'", 
                                                            "'pure'", "'type'", 
                                                            "'view'", "'global'", 
                                                            "'constructor'", 
                                                            "'fallback'", 
                                                            "'receive'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, "Int", 
                                                             "Uint", "Byte", 
                                                             "Fixed", "Ufixed", 
                                                             "BooleanLiteral", 
                                                             "DecimalNumber", 
                                                             "HexNumber", 
                                                             "NumberUnit", 
                                                             "HexLiteralFragment", 
                                                             "ReservedKeyword", 
                                                             "AnonymousKeyword", 
                                                             "BreakKeyword", 
                                                             "ConstantKeyword", 
                                                             "TransientKeyword", 
                                                             "ImmutableKeyword", 
                                                             "ContinueKeyword", 
                                                             "LeaveKeyword", 
                                                             "ExternalKeyword", 
                                                             "IndexedKeyword", 
                                                             "InternalKeyword", 
                                                             "PayableKeyword", 
                                                             "PrivateKeyword", 
                                                             "PublicKeyword", 
                                                             "VirtualKeyword", 
                                                             "PureKeyword", 
                                                             "TypeKeyword", 
                                                             "ViewKeyword", 
                                                             "GlobalKeyword", 
                                                             "ConstructorKeyword", 
                                                             "FallbackKeyword", 
                                                             "ReceiveKeyword", 
                                                             "Identifier", 
                                                             "StringLiteralFragment", 
                                                             "VersionLiteral", 
                                                             "WS", "COMMENT", 
                                                             "LINE_COMMENT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
		"T__57", "T__58", "T__59", "T__60", "T__61", "T__62", "T__63", "T__64", 
		"T__65", "T__66", "T__67", "T__68", "T__69", "T__70", "T__71", "T__72", 
		"T__73", "T__74", "T__75", "T__76", "T__77", "T__78", "T__79", "T__80", 
		"T__81", "T__82", "T__83", "T__84", "T__85", "T__86", "T__87", "T__88", 
		"T__89", "T__90", "T__91", "T__92", "T__93", "T__94", "T__95", "Int", 
		"Uint", "Byte", "Fixed", "Ufixed", "NumberOfBits", "NumberOfBytes", "BooleanLiteral", 
		"DecimalNumber", "DecimalDigits", "HexNumber", "HexDigits", "NumberUnit", 
		"HexLiteralFragment", "HexCharacter", "ReservedKeyword", "AnonymousKeyword", 
		"BreakKeyword", "ConstantKeyword", "TransientKeyword", "ImmutableKeyword", 
		"ContinueKeyword", "LeaveKeyword", "ExternalKeyword", "IndexedKeyword", 
		"InternalKeyword", "PayableKeyword", "PrivateKeyword", "PublicKeyword", 
		"VirtualKeyword", "PureKeyword", "TypeKeyword", "ViewKeyword", "GlobalKeyword", 
		"ConstructorKeyword", "FallbackKeyword", "ReceiveKeyword", "Identifier", 
		"IdentifierStart", "IdentifierPart", "StringLiteralFragment", "DoubleQuotedStringCharacter", 
		"SingleQuotedStringCharacter", "VersionLiteral", "WS", "COMMENT", "LINE_COMMENT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, SolidityLexer._ATN, SolidityLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "Solidity.g4"; }

	public get literalNames(): (string | null)[] { return SolidityLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return SolidityLexer.symbolicNames; }
	public get ruleNames(): string[] { return SolidityLexer.ruleNames; }

	public get serializedATN(): number[] { return SolidityLexer._serializedATN; }

	public get channelNames(): string[] { return SolidityLexer.channelNames; }

	public get modeNames(): string[] { return SolidityLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,134,1348,6,-1,2,
	0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,
	9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,
	7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,
	23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,
	2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,
	38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
	7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,
	52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,
	2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,
	67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,
	7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,
	81,2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,
	2,89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,
	96,7,96,2,97,7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,
	2,103,7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,
	2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,
	2,115,7,115,2,116,7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,
	2,121,7,121,2,122,7,122,2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,
	2,127,7,127,2,128,7,128,2,129,7,129,2,130,7,130,2,131,7,131,2,132,7,132,
	2,133,7,133,2,134,7,134,2,135,7,135,2,136,7,136,2,137,7,137,2,138,7,138,
	2,139,7,139,2,140,7,140,2,141,7,141,2,142,7,142,1,0,1,0,1,0,1,0,1,0,1,0,
	1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,8,
	1,8,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,
	1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,
	17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
	1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,
	20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,24,
	1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,
	27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,34,
	1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,
	36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,
	1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,
	40,1,40,1,40,1,41,1,41,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,
	1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,47,1,
	47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,
	1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,
	51,1,51,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,
	1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,
	56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,58,1,58,1,58,1,58,
	1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,
	61,1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,
	1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,66,1,
	66,1,66,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,69,1,69,1,70,1,70,1,70,1,70,
	1,70,1,70,1,70,1,71,1,71,1,72,1,72,1,72,1,73,1,73,1,73,1,74,1,74,1,74,1,
	75,1,75,1,75,1,76,1,76,1,77,1,77,1,77,1,78,1,78,1,78,1,79,1,79,1,79,1,80,
	1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,82,1,82,1,82,1,83,1,83,1,83,1,84,1,
	84,1,84,1,85,1,85,1,85,1,86,1,86,1,86,1,87,1,87,1,87,1,87,1,88,1,88,1,88,
	1,89,1,89,1,89,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,91,1,91,1,91,1,91,1,
	91,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,93,1,93,1,93,1,94,1,94,1,94,
	1,94,1,94,1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,95,1,95,1,95,1,95,1,
	95,1,96,1,96,1,96,1,96,1,96,3,96,724,8,96,1,97,1,97,1,97,1,97,1,97,1,97,
	3,97,732,8,97,1,98,1,98,1,98,1,98,1,98,1,98,1,98,3,98,741,8,98,1,99,1,99,
	1,99,1,99,1,99,1,99,1,99,1,99,1,99,4,99,752,8,99,11,99,12,99,753,3,99,756,
	8,99,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,4,100,
	768,8,100,11,100,12,100,769,3,100,772,8,100,1,101,1,101,1,101,1,101,1,101,
	1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,
	1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,
	1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,
	1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,
	1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,
	1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,
	1,101,1,101,1,101,1,101,1,101,1,101,3,101,857,8,101,1,102,1,102,1,102,1,
	102,1,102,3,102,864,8,102,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,
	1,103,3,103,875,8,103,1,104,1,104,3,104,879,8,104,1,104,1,104,3,104,883,
	8,104,1,104,1,104,3,104,887,8,104,1,104,3,104,890,8,104,1,105,1,105,3,105,
	894,8,105,1,105,5,105,897,8,105,10,105,12,105,900,9,105,1,106,1,106,1,106,
	1,106,1,107,1,107,3,107,908,8,107,1,107,5,107,911,8,107,10,107,12,107,914,
	9,107,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,
	1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,
	1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,
	1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,
	1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,108,3,108,972,8,108,1,
	109,1,109,1,109,1,109,1,109,1,109,3,109,980,8,109,1,109,1,109,1,109,3,109,
	985,8,109,1,109,3,109,988,8,109,1,110,1,110,1,111,1,111,1,111,1,111,1,111,
	1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,
	1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,
	1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,
	1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,
	1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,
	1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,
	1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,3,111,
	1080,8,111,1,112,1,112,1,112,1,112,1,112,1,112,1,112,1,112,1,112,1,112,
	1,113,1,113,1,113,1,113,1,113,1,113,1,114,1,114,1,114,1,114,1,114,1,114,
	1,114,1,114,1,114,1,115,1,115,1,115,1,115,1,115,1,115,1,115,1,115,1,115,
	1,115,1,116,1,116,1,116,1,116,1,116,1,116,1,116,1,116,1,116,1,116,1,117,
	1,117,1,117,1,117,1,117,1,117,1,117,1,117,1,117,1,118,1,118,1,118,1,118,
	1,118,1,118,1,119,1,119,1,119,1,119,1,119,1,119,1,119,1,119,1,119,1,120,
	1,120,1,120,1,120,1,120,1,120,1,120,1,120,1,121,1,121,1,121,1,121,1,121,
	1,121,1,121,1,121,1,121,1,122,1,122,1,122,1,122,1,122,1,122,1,122,1,122,
	1,123,1,123,1,123,1,123,1,123,1,123,1,123,1,123,1,124,1,124,1,124,1,124,
	1,124,1,124,1,124,1,125,1,125,1,125,1,125,1,125,1,125,1,125,1,125,1,126,
	1,126,1,126,1,126,1,126,1,127,1,127,1,127,1,127,1,127,1,128,1,128,1,128,
	1,128,1,128,1,129,1,129,1,129,1,129,1,129,1,129,1,129,1,130,1,130,1,130,
	1,130,1,130,1,130,1,130,1,130,1,130,1,130,1,130,1,130,1,131,1,131,1,131,
	1,131,1,131,1,131,1,131,1,131,1,131,1,132,1,132,1,132,1,132,1,132,1,132,
	1,132,1,132,1,133,1,133,5,133,1252,8,133,10,133,12,133,1255,9,133,1,134,
	1,134,1,135,1,135,1,136,1,136,1,136,1,136,1,136,1,136,1,136,3,136,1268,
	8,136,1,136,1,136,5,136,1272,8,136,10,136,12,136,1275,9,136,1,136,1,136,
	1,136,5,136,1280,8,136,10,136,12,136,1283,9,136,1,136,3,136,1286,8,136,
	1,137,1,137,1,137,3,137,1291,8,137,1,138,1,138,1,138,3,138,1296,8,138,1,
	139,4,139,1299,8,139,11,139,12,139,1300,1,139,1,139,4,139,1305,8,139,11,
	139,12,139,1306,1,139,1,139,4,139,1311,8,139,11,139,12,139,1312,3,139,1315,
	8,139,1,140,4,140,1318,8,140,11,140,12,140,1319,1,140,1,140,1,141,1,141,
	1,141,1,141,5,141,1328,8,141,10,141,12,141,1331,9,141,1,141,1,141,1,141,
	1,141,1,141,1,142,1,142,1,142,1,142,5,142,1342,8,142,10,142,12,142,1345,
	9,142,1,142,1,142,1,1329,0,143,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
	19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
	43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
	67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,
	91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,
	113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,
	67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,
	155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,
	88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,
	197,99,199,100,201,101,203,0,205,0,207,102,209,103,211,0,213,104,215,0,
	217,105,219,106,221,0,223,107,225,108,227,109,229,110,231,111,233,112,235,
	113,237,114,239,115,241,116,243,117,245,118,247,119,249,120,251,121,253,
	122,255,123,257,124,259,125,261,126,263,127,265,128,267,129,269,0,271,0,
	273,130,275,0,277,0,279,131,281,132,283,133,285,134,1,0,13,1,0,48,57,1,
	0,49,57,1,0,49,50,1,0,48,50,2,0,69,69,101,101,2,0,88,88,120,120,3,0,48,
	57,65,70,97,102,4,0,36,36,65,90,95,95,97,122,5,0,36,36,48,57,65,90,95,95,
	97,122,4,0,10,10,13,13,34,34,92,92,4,0,10,10,13,13,39,39,92,92,3,0,9,10,
	12,13,32,32,2,0,10,10,13,13,1430,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,
	7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
	0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
	1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
	0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
	1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
	0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
	1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,
	0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
	1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,
	0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,
	0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,
	0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,
	137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,
	1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,
	0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,
	0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,
	0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,
	0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,
	199,1,0,0,0,0,201,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,213,1,0,0,0,0,217,
	1,0,0,0,0,219,1,0,0,0,0,223,1,0,0,0,0,225,1,0,0,0,0,227,1,0,0,0,0,229,1,
	0,0,0,0,231,1,0,0,0,0,233,1,0,0,0,0,235,1,0,0,0,0,237,1,0,0,0,0,239,1,0,
	0,0,0,241,1,0,0,0,0,243,1,0,0,0,0,245,1,0,0,0,0,247,1,0,0,0,0,249,1,0,0,
	0,0,251,1,0,0,0,0,253,1,0,0,0,0,255,1,0,0,0,0,257,1,0,0,0,0,259,1,0,0,0,
	0,261,1,0,0,0,0,263,1,0,0,0,0,265,1,0,0,0,0,267,1,0,0,0,0,273,1,0,0,0,0,
	279,1,0,0,0,0,281,1,0,0,0,0,283,1,0,0,0,0,285,1,0,0,0,1,287,1,0,0,0,3,294,
	1,0,0,0,5,296,1,0,0,0,7,298,1,0,0,0,9,301,1,0,0,0,11,303,1,0,0,0,13,305,
	1,0,0,0,15,308,1,0,0,0,17,310,1,0,0,0,19,312,1,0,0,0,21,315,1,0,0,0,23,
	317,1,0,0,0,25,320,1,0,0,0,27,327,1,0,0,0,29,332,1,0,0,0,31,334,1,0,0,0,
	33,336,1,0,0,0,35,338,1,0,0,0,37,347,1,0,0,0,39,356,1,0,0,0,41,366,1,0,
	0,0,43,374,1,0,0,0,45,377,1,0,0,0,47,379,1,0,0,0,49,381,1,0,0,0,51,387,
	1,0,0,0,53,393,1,0,0,0,55,397,1,0,0,0,57,399,1,0,0,0,59,401,1,0,0,0,61,
	403,1,0,0,0,63,405,1,0,0,0,65,407,1,0,0,0,67,409,1,0,0,0,69,412,1,0,0,0,
	71,415,1,0,0,0,73,422,1,0,0,0,75,431,1,0,0,0,77,440,1,0,0,0,79,448,1,0,
	0,0,81,454,1,0,0,0,83,459,1,0,0,0,85,461,1,0,0,0,87,463,1,0,0,0,89,471,
	1,0,0,0,91,473,1,0,0,0,93,481,1,0,0,0,95,484,1,0,0,0,97,491,1,0,0,0,99,
	499,1,0,0,0,101,508,1,0,0,0,103,511,1,0,0,0,105,516,1,0,0,0,107,520,1,0,
	0,0,109,526,1,0,0,0,111,532,1,0,0,0,113,542,1,0,0,0,115,551,1,0,0,0,117,
	554,1,0,0,0,119,561,1,0,0,0,121,567,1,0,0,0,123,572,1,0,0,0,125,579,1,0,
	0,0,127,583,1,0,0,0,129,588,1,0,0,0,131,595,1,0,0,0,133,600,1,0,0,0,135,
	603,1,0,0,0,137,606,1,0,0,0,139,610,1,0,0,0,141,612,1,0,0,0,143,619,1,0,
	0,0,145,621,1,0,0,0,147,624,1,0,0,0,149,627,1,0,0,0,151,630,1,0,0,0,153,
	633,1,0,0,0,155,635,1,0,0,0,157,638,1,0,0,0,159,641,1,0,0,0,161,644,1,0,
	0,0,163,648,1,0,0,0,165,652,1,0,0,0,167,655,1,0,0,0,169,658,1,0,0,0,171,
	661,1,0,0,0,173,664,1,0,0,0,175,667,1,0,0,0,177,671,1,0,0,0,179,674,1,0,
	0,0,181,677,1,0,0,0,183,684,1,0,0,0,185,689,1,0,0,0,187,697,1,0,0,0,189,
	700,1,0,0,0,191,709,1,0,0,0,193,718,1,0,0,0,195,725,1,0,0,0,197,733,1,0,
	0,0,199,742,1,0,0,0,201,757,1,0,0,0,203,856,1,0,0,0,205,863,1,0,0,0,207,
	874,1,0,0,0,209,882,1,0,0,0,211,891,1,0,0,0,213,901,1,0,0,0,215,905,1,0,
	0,0,217,971,1,0,0,0,219,973,1,0,0,0,221,989,1,0,0,0,223,1079,1,0,0,0,225,
	1081,1,0,0,0,227,1091,1,0,0,0,229,1097,1,0,0,0,231,1106,1,0,0,0,233,1116,
	1,0,0,0,235,1126,1,0,0,0,237,1135,1,0,0,0,239,1141,1,0,0,0,241,1150,1,0,
	0,0,243,1158,1,0,0,0,245,1167,1,0,0,0,247,1175,1,0,0,0,249,1183,1,0,0,0,
	251,1190,1,0,0,0,253,1198,1,0,0,0,255,1203,1,0,0,0,257,1208,1,0,0,0,259,
	1213,1,0,0,0,261,1220,1,0,0,0,263,1232,1,0,0,0,265,1241,1,0,0,0,267,1249,
	1,0,0,0,269,1256,1,0,0,0,271,1258,1,0,0,0,273,1267,1,0,0,0,275,1290,1,0,
	0,0,277,1295,1,0,0,0,279,1298,1,0,0,0,281,1317,1,0,0,0,283,1323,1,0,0,0,
	285,1337,1,0,0,0,287,288,5,112,0,0,288,289,5,114,0,0,289,290,5,97,0,0,290,
	291,5,103,0,0,291,292,5,109,0,0,292,293,5,97,0,0,293,2,1,0,0,0,294,295,
	5,59,0,0,295,4,1,0,0,0,296,297,5,42,0,0,297,6,1,0,0,0,298,299,5,124,0,0,
	299,300,5,124,0,0,300,8,1,0,0,0,301,302,5,94,0,0,302,10,1,0,0,0,303,304,
	5,126,0,0,304,12,1,0,0,0,305,306,5,62,0,0,306,307,5,61,0,0,307,14,1,0,0,
	0,308,309,5,62,0,0,309,16,1,0,0,0,310,311,5,60,0,0,311,18,1,0,0,0,312,313,
	5,60,0,0,313,314,5,61,0,0,314,20,1,0,0,0,315,316,5,61,0,0,316,22,1,0,0,
	0,317,318,5,97,0,0,318,319,5,115,0,0,319,24,1,0,0,0,320,321,5,105,0,0,321,
	322,5,109,0,0,322,323,5,112,0,0,323,324,5,111,0,0,324,325,5,114,0,0,325,
	326,5,116,0,0,326,26,1,0,0,0,327,328,5,102,0,0,328,329,5,114,0,0,329,330,
	5,111,0,0,330,331,5,109,0,0,331,28,1,0,0,0,332,333,5,123,0,0,333,30,1,0,
	0,0,334,335,5,44,0,0,335,32,1,0,0,0,336,337,5,125,0,0,337,34,1,0,0,0,338,
	339,5,97,0,0,339,340,5,98,0,0,340,341,5,115,0,0,341,342,5,116,0,0,342,343,
	5,114,0,0,343,344,5,97,0,0,344,345,5,99,0,0,345,346,5,116,0,0,346,36,1,
	0,0,0,347,348,5,99,0,0,348,349,5,111,0,0,349,350,5,110,0,0,350,351,5,116,
	0,0,351,352,5,114,0,0,352,353,5,97,0,0,353,354,5,99,0,0,354,355,5,116,0,
	0,355,38,1,0,0,0,356,357,5,105,0,0,357,358,5,110,0,0,358,359,5,116,0,0,
	359,360,5,101,0,0,360,361,5,114,0,0,361,362,5,102,0,0,362,363,5,97,0,0,
	363,364,5,99,0,0,364,365,5,101,0,0,365,40,1,0,0,0,366,367,5,108,0,0,367,
	368,5,105,0,0,368,369,5,98,0,0,369,370,5,114,0,0,370,371,5,97,0,0,371,372,
	5,114,0,0,372,373,5,121,0,0,373,42,1,0,0,0,374,375,5,105,0,0,375,376,5,
	115,0,0,376,44,1,0,0,0,377,378,5,40,0,0,378,46,1,0,0,0,379,380,5,41,0,0,
	380,48,1,0,0,0,381,382,5,101,0,0,382,383,5,114,0,0,383,384,5,114,0,0,384,
	385,5,111,0,0,385,386,5,114,0,0,386,50,1,0,0,0,387,388,5,117,0,0,388,389,
	5,115,0,0,389,390,5,105,0,0,390,391,5,110,0,0,391,392,5,103,0,0,392,52,
	1,0,0,0,393,394,5,102,0,0,394,395,5,111,0,0,395,396,5,114,0,0,396,54,1,
	0,0,0,397,398,5,124,0,0,398,56,1,0,0,0,399,400,5,38,0,0,400,58,1,0,0,0,
	401,402,5,43,0,0,402,60,1,0,0,0,403,404,5,45,0,0,404,62,1,0,0,0,405,406,
	5,47,0,0,406,64,1,0,0,0,407,408,5,37,0,0,408,66,1,0,0,0,409,410,5,61,0,
	0,410,411,5,61,0,0,411,68,1,0,0,0,412,413,5,33,0,0,413,414,5,61,0,0,414,
	70,1,0,0,0,415,416,5,115,0,0,416,417,5,116,0,0,417,418,5,114,0,0,418,419,
	5,117,0,0,419,420,5,99,0,0,420,421,5,116,0,0,421,72,1,0,0,0,422,423,5,109,
	0,0,423,424,5,111,0,0,424,425,5,100,0,0,425,426,5,105,0,0,426,427,5,102,
	0,0,427,428,5,105,0,0,428,429,5,101,0,0,429,430,5,114,0,0,430,74,1,0,0,
	0,431,432,5,102,0,0,432,433,5,117,0,0,433,434,5,110,0,0,434,435,5,99,0,
	0,435,436,5,116,0,0,436,437,5,105,0,0,437,438,5,111,0,0,438,439,5,110,0,
	0,439,76,1,0,0,0,440,441,5,114,0,0,441,442,5,101,0,0,442,443,5,116,0,0,
	443,444,5,117,0,0,444,445,5,114,0,0,445,446,5,110,0,0,446,447,5,115,0,0,
	447,78,1,0,0,0,448,449,5,101,0,0,449,450,5,118,0,0,450,451,5,101,0,0,451,
	452,5,110,0,0,452,453,5,116,0,0,453,80,1,0,0,0,454,455,5,101,0,0,455,456,
	5,110,0,0,456,457,5,117,0,0,457,458,5,109,0,0,458,82,1,0,0,0,459,460,5,
	91,0,0,460,84,1,0,0,0,461,462,5,93,0,0,462,86,1,0,0,0,463,464,5,97,0,0,
	464,465,5,100,0,0,465,466,5,100,0,0,466,467,5,114,0,0,467,468,5,101,0,0,
	468,469,5,115,0,0,469,470,5,115,0,0,470,88,1,0,0,0,471,472,5,46,0,0,472,
	90,1,0,0,0,473,474,5,109,0,0,474,475,5,97,0,0,475,476,5,112,0,0,476,477,
	5,112,0,0,477,478,5,105,0,0,478,479,5,110,0,0,479,480,5,103,0,0,480,92,
	1,0,0,0,481,482,5,61,0,0,482,483,5,62,0,0,483,94,1,0,0,0,484,485,5,109,
	0,0,485,486,5,101,0,0,486,487,5,109,0,0,487,488,5,111,0,0,488,489,5,114,
	0,0,489,490,5,121,0,0,490,96,1,0,0,0,491,492,5,115,0,0,492,493,5,116,0,
	0,493,494,5,111,0,0,494,495,5,114,0,0,495,496,5,97,0,0,496,497,5,103,0,
	0,497,498,5,101,0,0,498,98,1,0,0,0,499,500,5,99,0,0,500,501,5,97,0,0,501,
	502,5,108,0,0,502,503,5,108,0,0,503,504,5,100,0,0,504,505,5,97,0,0,505,
	506,5,116,0,0,506,507,5,97,0,0,507,100,1,0,0,0,508,509,5,105,0,0,509,510,
	5,102,0,0,510,102,1,0,0,0,511,512,5,101,0,0,512,513,5,108,0,0,513,514,5,
	115,0,0,514,515,5,101,0,0,515,104,1,0,0,0,516,517,5,116,0,0,517,518,5,114,
	0,0,518,519,5,121,0,0,519,106,1,0,0,0,520,521,5,99,0,0,521,522,5,97,0,0,
	522,523,5,116,0,0,523,524,5,99,0,0,524,525,5,104,0,0,525,108,1,0,0,0,526,
	527,5,119,0,0,527,528,5,104,0,0,528,529,5,105,0,0,529,530,5,108,0,0,530,
	531,5,101,0,0,531,110,1,0,0,0,532,533,5,117,0,0,533,534,5,110,0,0,534,535,
	5,99,0,0,535,536,5,104,0,0,536,537,5,101,0,0,537,538,5,99,0,0,538,539,5,
	107,0,0,539,540,5,101,0,0,540,541,5,100,0,0,541,112,1,0,0,0,542,543,5,97,
	0,0,543,544,5,115,0,0,544,545,5,115,0,0,545,546,5,101,0,0,546,547,5,109,
	0,0,547,548,5,98,0,0,548,549,5,108,0,0,549,550,5,121,0,0,550,114,1,0,0,
	0,551,552,5,100,0,0,552,553,5,111,0,0,553,116,1,0,0,0,554,555,5,114,0,0,
	555,556,5,101,0,0,556,557,5,116,0,0,557,558,5,117,0,0,558,559,5,114,0,0,
	559,560,5,110,0,0,560,118,1,0,0,0,561,562,5,116,0,0,562,563,5,104,0,0,563,
	564,5,114,0,0,564,565,5,111,0,0,565,566,5,119,0,0,566,120,1,0,0,0,567,568,
	5,101,0,0,568,569,5,109,0,0,569,570,5,105,0,0,570,571,5,116,0,0,571,122,
	1,0,0,0,572,573,5,114,0,0,573,574,5,101,0,0,574,575,5,118,0,0,575,576,5,
	101,0,0,576,577,5,114,0,0,577,578,5,116,0,0,578,124,1,0,0,0,579,580,5,118,
	0,0,580,581,5,97,0,0,581,582,5,114,0,0,582,126,1,0,0,0,583,584,5,98,0,0,
	584,585,5,111,0,0,585,586,5,111,0,0,586,587,5,108,0,0,587,128,1,0,0,0,588,
	589,5,115,0,0,589,590,5,116,0,0,590,591,5,114,0,0,591,592,5,105,0,0,592,
	593,5,110,0,0,593,594,5,103,0,0,594,130,1,0,0,0,595,596,5,98,0,0,596,597,
	5,121,0,0,597,598,5,116,0,0,598,599,5,101,0,0,599,132,1,0,0,0,600,601,5,
	43,0,0,601,602,5,43,0,0,602,134,1,0,0,0,603,604,5,45,0,0,604,605,5,45,0,
	0,605,136,1,0,0,0,606,607,5,110,0,0,607,608,5,101,0,0,608,609,5,119,0,0,
	609,138,1,0,0,0,610,611,5,58,0,0,611,140,1,0,0,0,612,613,5,100,0,0,613,
	614,5,101,0,0,614,615,5,108,0,0,615,616,5,101,0,0,616,617,5,116,0,0,617,
	618,5,101,0,0,618,142,1,0,0,0,619,620,5,33,0,0,620,144,1,0,0,0,621,622,
	5,42,0,0,622,623,5,42,0,0,623,146,1,0,0,0,624,625,5,60,0,0,625,626,5,60,
	0,0,626,148,1,0,0,0,627,628,5,62,0,0,628,629,5,62,0,0,629,150,1,0,0,0,630,
	631,5,38,0,0,631,632,5,38,0,0,632,152,1,0,0,0,633,634,5,63,0,0,634,154,
	1,0,0,0,635,636,5,124,0,0,636,637,5,61,0,0,637,156,1,0,0,0,638,639,5,94,
	0,0,639,640,5,61,0,0,640,158,1,0,0,0,641,642,5,38,0,0,642,643,5,61,0,0,
	643,160,1,0,0,0,644,645,5,60,0,0,645,646,5,60,0,0,646,647,5,61,0,0,647,
	162,1,0,0,0,648,649,5,62,0,0,649,650,5,62,0,0,650,651,5,61,0,0,651,164,
	1,0,0,0,652,653,5,43,0,0,653,654,5,61,0,0,654,166,1,0,0,0,655,656,5,45,
	0,0,656,657,5,61,0,0,657,168,1,0,0,0,658,659,5,42,0,0,659,660,5,61,0,0,
	660,170,1,0,0,0,661,662,5,47,0,0,662,663,5,61,0,0,663,172,1,0,0,0,664,665,
	5,37,0,0,665,666,5,61,0,0,666,174,1,0,0,0,667,668,5,108,0,0,668,669,5,101,
	0,0,669,670,5,116,0,0,670,176,1,0,0,0,671,672,5,58,0,0,672,673,5,61,0,0,
	673,178,1,0,0,0,674,675,5,61,0,0,675,676,5,58,0,0,676,180,1,0,0,0,677,678,
	5,115,0,0,678,679,5,119,0,0,679,680,5,105,0,0,680,681,5,116,0,0,681,682,
	5,99,0,0,682,683,5,104,0,0,683,182,1,0,0,0,684,685,5,99,0,0,685,686,5,97,
	0,0,686,687,5,115,0,0,687,688,5,101,0,0,688,184,1,0,0,0,689,690,5,100,0,
	0,690,691,5,101,0,0,691,692,5,102,0,0,692,693,5,97,0,0,693,694,5,117,0,
	0,694,695,5,108,0,0,695,696,5,116,0,0,696,186,1,0,0,0,697,698,5,45,0,0,
	698,699,5,62,0,0,699,188,1,0,0,0,700,701,5,99,0,0,701,702,5,97,0,0,702,
	703,5,108,0,0,703,704,5,108,0,0,704,705,5,98,0,0,705,706,5,97,0,0,706,707,
	5,99,0,0,707,708,5,107,0,0,708,190,1,0,0,0,709,710,5,111,0,0,710,711,5,
	118,0,0,711,712,5,101,0,0,712,713,5,114,0,0,713,714,5,114,0,0,714,715,5,
	105,0,0,715,716,5,100,0,0,716,717,5,101,0,0,717,192,1,0,0,0,718,719,5,105,
	0,0,719,720,5,110,0,0,720,721,5,116,0,0,721,723,1,0,0,0,722,724,3,203,101,
	0,723,722,1,0,0,0,723,724,1,0,0,0,724,194,1,0,0,0,725,726,5,117,0,0,726,
	727,5,105,0,0,727,728,5,110,0,0,728,729,5,116,0,0,729,731,1,0,0,0,730,732,
	3,203,101,0,731,730,1,0,0,0,731,732,1,0,0,0,732,196,1,0,0,0,733,734,5,98,
	0,0,734,735,5,121,0,0,735,736,5,116,0,0,736,737,5,101,0,0,737,738,5,115,
	0,0,738,740,1,0,0,0,739,741,3,205,102,0,740,739,1,0,0,0,740,741,1,0,0,0,
	741,198,1,0,0,0,742,743,5,102,0,0,743,744,5,105,0,0,744,745,5,120,0,0,745,
	746,5,101,0,0,746,747,5,100,0,0,747,755,1,0,0,0,748,749,3,203,101,0,749,
	751,5,120,0,0,750,752,7,0,0,0,751,750,1,0,0,0,752,753,1,0,0,0,753,751,1,
	0,0,0,753,754,1,0,0,0,754,756,1,0,0,0,755,748,1,0,0,0,755,756,1,0,0,0,756,
	200,1,0,0,0,757,758,5,117,0,0,758,759,5,102,0,0,759,760,5,105,0,0,760,761,
	5,120,0,0,761,762,5,101,0,0,762,763,5,100,0,0,763,771,1,0,0,0,764,765,3,
	203,101,0,765,767,5,120,0,0,766,768,7,0,0,0,767,766,1,0,0,0,768,769,1,0,
	0,0,769,767,1,0,0,0,769,770,1,0,0,0,770,772,1,0,0,0,771,764,1,0,0,0,771,
	772,1,0,0,0,772,202,1,0,0,0,773,857,5,56,0,0,774,775,5,49,0,0,775,857,5,
	54,0,0,776,777,5,50,0,0,777,857,5,52,0,0,778,779,5,51,0,0,779,857,5,50,
	0,0,780,781,5,52,0,0,781,857,5,48,0,0,782,783,5,52,0,0,783,857,5,56,0,0,
	784,785,5,53,0,0,785,857,5,54,0,0,786,787,5,54,0,0,787,857,5,52,0,0,788,
	789,5,55,0,0,789,857,5,50,0,0,790,791,5,56,0,0,791,857,5,48,0,0,792,793,
	5,56,0,0,793,857,5,56,0,0,794,795,5,57,0,0,795,857,5,54,0,0,796,797,5,49,
	0,0,797,798,5,48,0,0,798,857,5,52,0,0,799,800,5,49,0,0,800,801,5,49,0,0,
	801,857,5,50,0,0,802,803,5,49,0,0,803,804,5,50,0,0,804,857,5,48,0,0,805,
	806,5,49,0,0,806,807,5,50,0,0,807,857,5,56,0,0,808,809,5,49,0,0,809,810,
	5,51,0,0,810,857,5,54,0,0,811,812,5,49,0,0,812,813,5,52,0,0,813,857,5,52,
	0,0,814,815,5,49,0,0,815,816,5,53,0,0,816,857,5,50,0,0,817,818,5,49,0,0,
	818,819,5,54,0,0,819,857,5,48,0,0,820,821,5,49,0,0,821,822,5,54,0,0,822,
	857,5,56,0,0,823,824,5,49,0,0,824,825,5,55,0,0,825,857,5,54,0,0,826,827,
	5,49,0,0,827,828,5,56,0,0,828,857,5,52,0,0,829,830,5,49,0,0,830,831,5,57,
	0,0,831,857,5,50,0,0,832,833,5,50,0,0,833,834,5,48,0,0,834,857,5,48,0,0,
	835,836,5,50,0,0,836,837,5,48,0,0,837,857,5,56,0,0,838,839,5,50,0,0,839,
	840,5,49,0,0,840,857,5,54,0,0,841,842,5,50,0,0,842,843,5,50,0,0,843,857,
	5,52,0,0,844,845,5,50,0,0,845,846,5,51,0,0,846,857,5,50,0,0,847,848,5,50,
	0,0,848,849,5,52,0,0,849,857,5,48,0,0,850,851,5,50,0,0,851,852,5,52,0,0,
	852,857,5,56,0,0,853,854,5,50,0,0,854,855,5,53,0,0,855,857,5,54,0,0,856,
	773,1,0,0,0,856,774,1,0,0,0,856,776,1,0,0,0,856,778,1,0,0,0,856,780,1,0,
	0,0,856,782,1,0,0,0,856,784,1,0,0,0,856,786,1,0,0,0,856,788,1,0,0,0,856,
	790,1,0,0,0,856,792,1,0,0,0,856,794,1,0,0,0,856,796,1,0,0,0,856,799,1,0,
	0,0,856,802,1,0,0,0,856,805,1,0,0,0,856,808,1,0,0,0,856,811,1,0,0,0,856,
	814,1,0,0,0,856,817,1,0,0,0,856,820,1,0,0,0,856,823,1,0,0,0,856,826,1,0,
	0,0,856,829,1,0,0,0,856,832,1,0,0,0,856,835,1,0,0,0,856,838,1,0,0,0,856,
	841,1,0,0,0,856,844,1,0,0,0,856,847,1,0,0,0,856,850,1,0,0,0,856,853,1,0,
	0,0,857,204,1,0,0,0,858,864,7,1,0,0,859,860,7,2,0,0,860,864,7,0,0,0,861,
	862,5,51,0,0,862,864,7,3,0,0,863,858,1,0,0,0,863,859,1,0,0,0,863,861,1,
	0,0,0,864,206,1,0,0,0,865,866,5,116,0,0,866,867,5,114,0,0,867,868,5,117,
	0,0,868,875,5,101,0,0,869,870,5,102,0,0,870,871,5,97,0,0,871,872,5,108,
	0,0,872,873,5,115,0,0,873,875,5,101,0,0,874,865,1,0,0,0,874,869,1,0,0,0,
	875,208,1,0,0,0,876,883,3,211,105,0,877,879,3,211,105,0,878,877,1,0,0,0,
	878,879,1,0,0,0,879,880,1,0,0,0,880,881,5,46,0,0,881,883,3,211,105,0,882,
	876,1,0,0,0,882,878,1,0,0,0,883,889,1,0,0,0,884,886,7,4,0,0,885,887,5,45,
	0,0,886,885,1,0,0,0,886,887,1,0,0,0,887,888,1,0,0,0,888,890,3,211,105,0,
	889,884,1,0,0,0,889,890,1,0,0,0,890,210,1,0,0,0,891,898,7,0,0,0,892,894,
	5,95,0,0,893,892,1,0,0,0,893,894,1,0,0,0,894,895,1,0,0,0,895,897,7,0,0,
	0,896,893,1,0,0,0,897,900,1,0,0,0,898,896,1,0,0,0,898,899,1,0,0,0,899,212,
	1,0,0,0,900,898,1,0,0,0,901,902,5,48,0,0,902,903,7,5,0,0,903,904,3,215,
	107,0,904,214,1,0,0,0,905,912,3,221,110,0,906,908,5,95,0,0,907,906,1,0,
	0,0,907,908,1,0,0,0,908,909,1,0,0,0,909,911,3,221,110,0,910,907,1,0,0,0,
	911,914,1,0,0,0,912,910,1,0,0,0,912,913,1,0,0,0,913,216,1,0,0,0,914,912,
	1,0,0,0,915,916,5,119,0,0,916,917,5,101,0,0,917,972,5,105,0,0,918,919,5,
	103,0,0,919,920,5,119,0,0,920,921,5,101,0,0,921,972,5,105,0,0,922,923,5,
	115,0,0,923,924,5,122,0,0,924,925,5,97,0,0,925,926,5,98,0,0,926,972,5,111,
	0,0,927,928,5,102,0,0,928,929,5,105,0,0,929,930,5,110,0,0,930,931,5,110,
	0,0,931,932,5,101,0,0,932,972,5,121,0,0,933,934,5,101,0,0,934,935,5,116,
	0,0,935,936,5,104,0,0,936,937,5,101,0,0,937,972,5,114,0,0,938,939,5,115,
	0,0,939,940,5,101,0,0,940,941,5,99,0,0,941,942,5,111,0,0,942,943,5,110,
	0,0,943,944,5,100,0,0,944,972,5,115,0,0,945,946,5,109,0,0,946,947,5,105,
	0,0,947,948,5,110,0,0,948,949,5,117,0,0,949,950,5,116,0,0,950,951,5,101,
	0,0,951,972,5,115,0,0,952,953,5,104,0,0,953,954,5,111,0,0,954,955,5,117,
	0,0,955,956,5,114,0,0,956,972,5,115,0,0,957,958,5,100,0,0,958,959,5,97,
	0,0,959,960,5,121,0,0,960,972,5,115,0,0,961,962,5,119,0,0,962,963,5,101,
	0,0,963,964,5,101,0,0,964,965,5,107,0,0,965,972,5,115,0,0,966,967,5,121,
	0,0,967,968,5,101,0,0,968,969,5,97,0,0,969,970,5,114,0,0,970,972,5,115,
	0,0,971,915,1,0,0,0,971,918,1,0,0,0,971,922,1,0,0,0,971,927,1,0,0,0,971,
	933,1,0,0,0,971,938,1,0,0,0,971,945,1,0,0,0,971,952,1,0,0,0,971,957,1,0,
	0,0,971,961,1,0,0,0,971,966,1,0,0,0,972,218,1,0,0,0,973,974,5,104,0,0,974,
	975,5,101,0,0,975,976,5,120,0,0,976,987,1,0,0,0,977,979,5,34,0,0,978,980,
	3,215,107,0,979,978,1,0,0,0,979,980,1,0,0,0,980,981,1,0,0,0,981,988,5,34,
	0,0,982,984,5,39,0,0,983,985,3,215,107,0,984,983,1,0,0,0,984,985,1,0,0,
	0,985,986,1,0,0,0,986,988,5,39,0,0,987,977,1,0,0,0,987,982,1,0,0,0,988,
	220,1,0,0,0,989,990,7,6,0,0,990,222,1,0,0,0,991,992,5,97,0,0,992,993,5,
	98,0,0,993,994,5,115,0,0,994,995,5,116,0,0,995,996,5,114,0,0,996,997,5,
	97,0,0,997,998,5,99,0,0,998,1080,5,116,0,0,999,1000,5,97,0,0,1000,1001,
	5,102,0,0,1001,1002,5,116,0,0,1002,1003,5,101,0,0,1003,1080,5,114,0,0,1004,
	1005,5,99,0,0,1005,1006,5,97,0,0,1006,1007,5,115,0,0,1007,1080,5,101,0,
	0,1008,1009,5,99,0,0,1009,1010,5,97,0,0,1010,1011,5,116,0,0,1011,1012,5,
	99,0,0,1012,1080,5,104,0,0,1013,1014,5,100,0,0,1014,1015,5,101,0,0,1015,
	1016,5,102,0,0,1016,1017,5,97,0,0,1017,1018,5,117,0,0,1018,1019,5,108,0,
	0,1019,1080,5,116,0,0,1020,1021,5,102,0,0,1021,1022,5,105,0,0,1022,1023,
	5,110,0,0,1023,1024,5,97,0,0,1024,1080,5,108,0,0,1025,1026,5,105,0,0,1026,
	1080,5,110,0,0,1027,1028,5,105,0,0,1028,1029,5,110,0,0,1029,1030,5,108,
	0,0,1030,1031,5,105,0,0,1031,1032,5,110,0,0,1032,1080,5,101,0,0,1033,1034,
	5,108,0,0,1034,1035,5,101,0,0,1035,1080,5,116,0,0,1036,1037,5,109,0,0,1037,
	1038,5,97,0,0,1038,1039,5,116,0,0,1039,1040,5,99,0,0,1040,1080,5,104,0,
	0,1041,1042,5,110,0,0,1042,1043,5,117,0,0,1043,1044,5,108,0,0,1044,1080,
	5,108,0,0,1045,1046,5,111,0,0,1046,1080,5,102,0,0,1047,1048,5,114,0,0,1048,
	1049,5,101,0,0,1049,1050,5,108,0,0,1050,1051,5,111,0,0,1051,1052,5,99,0,
	0,1052,1053,5,97,0,0,1053,1054,5,116,0,0,1054,1055,5,97,0,0,1055,1056,5,
	98,0,0,1056,1057,5,108,0,0,1057,1080,5,101,0,0,1058,1059,5,115,0,0,1059,
	1060,5,116,0,0,1060,1061,5,97,0,0,1061,1062,5,116,0,0,1062,1063,5,105,0,
	0,1063,1080,5,99,0,0,1064,1065,5,115,0,0,1065,1066,5,119,0,0,1066,1067,
	5,105,0,0,1067,1068,5,116,0,0,1068,1069,5,99,0,0,1069,1080,5,104,0,0,1070,
	1071,5,116,0,0,1071,1072,5,114,0,0,1072,1080,5,121,0,0,1073,1074,5,116,
	0,0,1074,1075,5,121,0,0,1075,1076,5,112,0,0,1076,1077,5,101,0,0,1077,1078,
	5,111,0,0,1078,1080,5,102,0,0,1079,991,1,0,0,0,1079,999,1,0,0,0,1079,1004,
	1,0,0,0,1079,1008,1,0,0,0,1079,1013,1,0,0,0,1079,1020,1,0,0,0,1079,1025,
	1,0,0,0,1079,1027,1,0,0,0,1079,1033,1,0,0,0,1079,1036,1,0,0,0,1079,1041,
	1,0,0,0,1079,1045,1,0,0,0,1079,1047,1,0,0,0,1079,1058,1,0,0,0,1079,1064,
	1,0,0,0,1079,1070,1,0,0,0,1079,1073,1,0,0,0,1080,224,1,0,0,0,1081,1082,
	5,97,0,0,1082,1083,5,110,0,0,1083,1084,5,111,0,0,1084,1085,5,110,0,0,1085,
	1086,5,121,0,0,1086,1087,5,109,0,0,1087,1088,5,111,0,0,1088,1089,5,117,
	0,0,1089,1090,5,115,0,0,1090,226,1,0,0,0,1091,1092,5,98,0,0,1092,1093,5,
	114,0,0,1093,1094,5,101,0,0,1094,1095,5,97,0,0,1095,1096,5,107,0,0,1096,
	228,1,0,0,0,1097,1098,5,99,0,0,1098,1099,5,111,0,0,1099,1100,5,110,0,0,
	1100,1101,5,115,0,0,1101,1102,5,116,0,0,1102,1103,5,97,0,0,1103,1104,5,
	110,0,0,1104,1105,5,116,0,0,1105,230,1,0,0,0,1106,1107,5,116,0,0,1107,1108,
	5,114,0,0,1108,1109,5,97,0,0,1109,1110,5,110,0,0,1110,1111,5,115,0,0,1111,
	1112,5,105,0,0,1112,1113,5,101,0,0,1113,1114,5,110,0,0,1114,1115,5,116,
	0,0,1115,232,1,0,0,0,1116,1117,5,105,0,0,1117,1118,5,109,0,0,1118,1119,
	5,109,0,0,1119,1120,5,117,0,0,1120,1121,5,116,0,0,1121,1122,5,97,0,0,1122,
	1123,5,98,0,0,1123,1124,5,108,0,0,1124,1125,5,101,0,0,1125,234,1,0,0,0,
	1126,1127,5,99,0,0,1127,1128,5,111,0,0,1128,1129,5,110,0,0,1129,1130,5,
	116,0,0,1130,1131,5,105,0,0,1131,1132,5,110,0,0,1132,1133,5,117,0,0,1133,
	1134,5,101,0,0,1134,236,1,0,0,0,1135,1136,5,108,0,0,1136,1137,5,101,0,0,
	1137,1138,5,97,0,0,1138,1139,5,118,0,0,1139,1140,5,101,0,0,1140,238,1,0,
	0,0,1141,1142,5,101,0,0,1142,1143,5,120,0,0,1143,1144,5,116,0,0,1144,1145,
	5,101,0,0,1145,1146,5,114,0,0,1146,1147,5,110,0,0,1147,1148,5,97,0,0,1148,
	1149,5,108,0,0,1149,240,1,0,0,0,1150,1151,5,105,0,0,1151,1152,5,110,0,0,
	1152,1153,5,100,0,0,1153,1154,5,101,0,0,1154,1155,5,120,0,0,1155,1156,5,
	101,0,0,1156,1157,5,100,0,0,1157,242,1,0,0,0,1158,1159,5,105,0,0,1159,1160,
	5,110,0,0,1160,1161,5,116,0,0,1161,1162,5,101,0,0,1162,1163,5,114,0,0,1163,
	1164,5,110,0,0,1164,1165,5,97,0,0,1165,1166,5,108,0,0,1166,244,1,0,0,0,
	1167,1168,5,112,0,0,1168,1169,5,97,0,0,1169,1170,5,121,0,0,1170,1171,5,
	97,0,0,1171,1172,5,98,0,0,1172,1173,5,108,0,0,1173,1174,5,101,0,0,1174,
	246,1,0,0,0,1175,1176,5,112,0,0,1176,1177,5,114,0,0,1177,1178,5,105,0,0,
	1178,1179,5,118,0,0,1179,1180,5,97,0,0,1180,1181,5,116,0,0,1181,1182,5,
	101,0,0,1182,248,1,0,0,0,1183,1184,5,112,0,0,1184,1185,5,117,0,0,1185,1186,
	5,98,0,0,1186,1187,5,108,0,0,1187,1188,5,105,0,0,1188,1189,5,99,0,0,1189,
	250,1,0,0,0,1190,1191,5,118,0,0,1191,1192,5,105,0,0,1192,1193,5,114,0,0,
	1193,1194,5,116,0,0,1194,1195,5,117,0,0,1195,1196,5,97,0,0,1196,1197,5,
	108,0,0,1197,252,1,0,0,0,1198,1199,5,112,0,0,1199,1200,5,117,0,0,1200,1201,
	5,114,0,0,1201,1202,5,101,0,0,1202,254,1,0,0,0,1203,1204,5,116,0,0,1204,
	1205,5,121,0,0,1205,1206,5,112,0,0,1206,1207,5,101,0,0,1207,256,1,0,0,0,
	1208,1209,5,118,0,0,1209,1210,5,105,0,0,1210,1211,5,101,0,0,1211,1212,5,
	119,0,0,1212,258,1,0,0,0,1213,1214,5,103,0,0,1214,1215,5,108,0,0,1215,1216,
	5,111,0,0,1216,1217,5,98,0,0,1217,1218,5,97,0,0,1218,1219,5,108,0,0,1219,
	260,1,0,0,0,1220,1221,5,99,0,0,1221,1222,5,111,0,0,1222,1223,5,110,0,0,
	1223,1224,5,115,0,0,1224,1225,5,116,0,0,1225,1226,5,114,0,0,1226,1227,5,
	117,0,0,1227,1228,5,99,0,0,1228,1229,5,116,0,0,1229,1230,5,111,0,0,1230,
	1231,5,114,0,0,1231,262,1,0,0,0,1232,1233,5,102,0,0,1233,1234,5,97,0,0,
	1234,1235,5,108,0,0,1235,1236,5,108,0,0,1236,1237,5,98,0,0,1237,1238,5,
	97,0,0,1238,1239,5,99,0,0,1239,1240,5,107,0,0,1240,264,1,0,0,0,1241,1242,
	5,114,0,0,1242,1243,5,101,0,0,1243,1244,5,99,0,0,1244,1245,5,101,0,0,1245,
	1246,5,105,0,0,1246,1247,5,118,0,0,1247,1248,5,101,0,0,1248,266,1,0,0,0,
	1249,1253,3,269,134,0,1250,1252,3,271,135,0,1251,1250,1,0,0,0,1252,1255,
	1,0,0,0,1253,1251,1,0,0,0,1253,1254,1,0,0,0,1254,268,1,0,0,0,1255,1253,
	1,0,0,0,1256,1257,7,7,0,0,1257,270,1,0,0,0,1258,1259,7,8,0,0,1259,272,1,
	0,0,0,1260,1261,5,117,0,0,1261,1262,5,110,0,0,1262,1263,5,105,0,0,1263,
	1264,5,99,0,0,1264,1265,5,111,0,0,1265,1266,5,100,0,0,1266,1268,5,101,0,
	0,1267,1260,1,0,0,0,1267,1268,1,0,0,0,1268,1285,1,0,0,0,1269,1273,5,34,
	0,0,1270,1272,3,275,137,0,1271,1270,1,0,0,0,1272,1275,1,0,0,0,1273,1271,
	1,0,0,0,1273,1274,1,0,0,0,1274,1276,1,0,0,0,1275,1273,1,0,0,0,1276,1286,
	5,34,0,0,1277,1281,5,39,0,0,1278,1280,3,277,138,0,1279,1278,1,0,0,0,1280,
	1283,1,0,0,0,1281,1279,1,0,0,0,1281,1282,1,0,0,0,1282,1284,1,0,0,0,1283,
	1281,1,0,0,0,1284,1286,5,39,0,0,1285,1269,1,0,0,0,1285,1277,1,0,0,0,1286,
	274,1,0,0,0,1287,1291,8,9,0,0,1288,1289,5,92,0,0,1289,1291,9,0,0,0,1290,
	1287,1,0,0,0,1290,1288,1,0,0,0,1291,276,1,0,0,0,1292,1296,8,10,0,0,1293,
	1294,5,92,0,0,1294,1296,9,0,0,0,1295,1292,1,0,0,0,1295,1293,1,0,0,0,1296,
	278,1,0,0,0,1297,1299,7,0,0,0,1298,1297,1,0,0,0,1299,1300,1,0,0,0,1300,
	1298,1,0,0,0,1300,1301,1,0,0,0,1301,1302,1,0,0,0,1302,1304,5,46,0,0,1303,
	1305,7,0,0,0,1304,1303,1,0,0,0,1305,1306,1,0,0,0,1306,1304,1,0,0,0,1306,
	1307,1,0,0,0,1307,1314,1,0,0,0,1308,1310,5,46,0,0,1309,1311,7,0,0,0,1310,
	1309,1,0,0,0,1311,1312,1,0,0,0,1312,1310,1,0,0,0,1312,1313,1,0,0,0,1313,
	1315,1,0,0,0,1314,1308,1,0,0,0,1314,1315,1,0,0,0,1315,280,1,0,0,0,1316,
	1318,7,11,0,0,1317,1316,1,0,0,0,1318,1319,1,0,0,0,1319,1317,1,0,0,0,1319,
	1320,1,0,0,0,1320,1321,1,0,0,0,1321,1322,6,140,0,0,1322,282,1,0,0,0,1323,
	1324,5,47,0,0,1324,1325,5,42,0,0,1325,1329,1,0,0,0,1326,1328,9,0,0,0,1327,
	1326,1,0,0,0,1328,1331,1,0,0,0,1329,1330,1,0,0,0,1329,1327,1,0,0,0,1330,
	1332,1,0,0,0,1331,1329,1,0,0,0,1332,1333,5,42,0,0,1333,1334,5,47,0,0,1334,
	1335,1,0,0,0,1335,1336,6,141,1,0,1336,284,1,0,0,0,1337,1338,5,47,0,0,1338,
	1339,5,47,0,0,1339,1343,1,0,0,0,1340,1342,8,12,0,0,1341,1340,1,0,0,0,1342,
	1345,1,0,0,0,1343,1341,1,0,0,0,1343,1344,1,0,0,0,1344,1346,1,0,0,0,1345,
	1343,1,0,0,0,1346,1347,6,142,1,0,1347,286,1,0,0,0,38,0,723,731,740,753,
	755,769,771,856,863,874,878,882,886,889,893,898,907,912,971,979,984,987,
	1079,1253,1267,1273,1281,1285,1290,1295,1300,1306,1312,1314,1319,1329,1343,
	2,6,0,0,0,1,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!SolidityLexer.__ATN) {
			SolidityLexer.__ATN = new ATNDeserializer().deserialize(SolidityLexer._serializedATN);
		}

		return SolidityLexer.__ATN;
	}


	static DecisionsToDFA = SolidityLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}